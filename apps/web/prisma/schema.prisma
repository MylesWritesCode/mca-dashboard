datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("userId")
  type              String
  provider          String
  providerAccountId String  @map("providerAccountId")
  refreshToken      String? @map("refreshToken") @db.Text
  accessToken       String? @map("accessToken") @db.Text
  expiresAt         Int?    @map("expiresAt")
  tokenType         String? @map("tokenType")
  scope             String?
  idToken           String? @map("idToken") @db.Text
  sessionState      String? @map("sessionState")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("Accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("sessionToken")
  userId       String   @map("userId")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("Sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  displayName   String?   @unique @map("displayName")
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  OrganizationUsers OrganizationUsers[]
  @@map("Users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("VerificationTokens")
}

model Organization {
  id         String   @id @default(uuid())
  name       String   @unique
  createdAt  DateTime @default(now()) @map("createdAt")
  modifiedAt DateTime @default(now()) @map("modifiedAt")

  OrganizationUsers OrganizationUsers[]
  Client            Client[]
  @@map("Organizations")
}

model OrganizationUsers {
  userId         String       @map("userId")
  organizationId String       @map("organizationId")
  organizations  Organization @relation(fields: [organizationId], references: [id])
  users          User         @relation(fields: [userId], references: [id])

  @@id([userId, organizationId])
}

model Client {
  id             String   @id @default(uuid())
  name           String   @unique
  organizationId String   @map("organizationId")
  createdAt      DateTime @default(now()) @map("createdAt")
  modifiedAt     DateTime @default(now()) @map("modifiedAt")

  organization Organization @relation(fields: [organizationId], references: [id])
  @@map("Clients")
}
