datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  
  OrganizationUsers OrganizationUsers[]
  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}  

model Organization {
  id          String   @id @default(uuid())
  name        String   @unique
  created_at  DateTime @default(now())
  modified_at DateTime @default(now())

  OrganizationUsers OrganizationUsers[]
  Client            Client[]
  @@map("organizations")
}

model OrganizationUsers {
  user_id         String
  organization_id String
  organizations   Organization @relation(fields: [organization_id], references: [id])
  users           User         @relation(fields: [user_id], references: [id])

  @@id([user_id, organization_id])
  @@map("organization_users")
}

model Client {
  id              String   @id @default(uuid())
  name            String   @unique
  organization_id String
  created_at      DateTime @default(now())
  modified_at     DateTime @default(now())

  organization Organization @relation(fields: [organization_id], references: [id])
  @@map("clients")
}
